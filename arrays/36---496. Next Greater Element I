class Solution(object):
    def nextGreaterElement(self, nums1, nums2):
        lis=[]
        for i in range(len(nums1)):
            lis.append(-1)
            
        for i in range(len(nums1)):
            temp=nums1[i]
            tempindex=nums2.index(temp)
            for j in range(tempindex,len(nums2)):
                if nums2[j]>temp:
                    lis[i]=nums2[j]
                if lis[i]!=-1:
                    break
            # if len(lis)!=i+1:
            #     lis.append(-1)
        return lis


        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        #alternate
        class Solution(object):
    def nextGreaterElement(self, nums1, nums2):
        d={}
        lis=[]
        for i in range(len(nums1)):
            lis.append(-1)

        for i in range(len(nums1)):
            if nums1[i] not in d:
                d[nums1[i]]=i
        for i in range(len(nums2)):
            if nums2[i] in d:
                for j in range(i,len(nums2)):
                    if nums2[j]>nums2[i]:
                        lis[d[nums2[i]]]=nums2[j]
                    if lis[d[nums2[i]]]!=-1:
                        break
        return lis

        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        #alternate
        class Solution:
    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:
        d = {}
        for i in range(len(nums1)):
            d[nums1[i]]=i
        stack = []
        l = [-1] * len(nums1)
        for i in range(len(nums2)):
            cur=nums2[i]
            while stack and cur>stack[-1]:
                val=stack.pop()
                idx=d[val]
                l[idx]=cur
            
            if cur in d:
                stack.append(cur)
        return l
#revised
class Solution(object):
    def nextGreaterElement(self, nums1, nums2):
        res=[-1]*len(nums1)
        stack=[]
        d={}
        for i,n in enumerate(nums1):
            d[n]=i#dictionary of element to index

        for i in range(len(nums2)):
            curr=nums2[i]
            for j in range(i+1,len(nums2)):
                if curr<nums2[j] and curr in nums1:
                    res[d[nums2[i]]]=nums2[j]
                    break
        return res
            
                
        return res


        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        
        
