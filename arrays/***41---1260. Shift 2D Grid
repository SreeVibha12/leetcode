class Solution:
    def shiftGrid(self, grid: List[List[int]], k: int) -> List[List[int]]:
        res=[]
        temp=[]
        for i in range(len(grid)):#no of rows
            for j in range(len(grid[0])):#no of columns
                temp.append(0)
            res.append(temp)
            temp=[]
        def postoval(r,c):#creating helper function,for pos to val
            return r*len(grid[0])+c
        def valtopos(v):
            return ((v)//len(grid[0]),(v)%len(grid[0]))
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                val=postoval(i,j)
                newr,newc=valtopos((val+k)%(len(grid)*len(grid[0])))
                res[newr][newc]=grid[i][j]

        return res
        








                # # for j in range(len(grid)):#column
                # if i=len(grid)-2:
                #     temp=grid[i]
                # grid[i+1]=grid[i]
            
