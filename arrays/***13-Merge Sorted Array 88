class Solution(object):
    def merge(self, nums1, m, nums2, n):
       lfptrn1=len(nums1)-1
       lfptrn2=len(nums2)-1
    
       rtptrn1=m-1
       while lfptrn2>=0 and rtptrn1>=0:
            if nums2[lfptrn2]>nums1[rtptrn1]:
                nums1[lfptrn1]=nums2[lfptrn2]
                lfptrn1=lfptrn1-1
                lfptrn2=lfptrn2-1
            else:
                nums1[lfptrn1]=nums1[rtptrn1]
                rtptrn1=rtptrn1-1
                lfptrn1=lfptrn1-1

       while lfptrn2>=0:
            nums1[lfptrn1]=nums2[lfptrn2]
            lfptrn2=lfptrn2-1
            lfptrn1=lfptrn1-1

       return nums1
#alternate
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        last=m+n-1
        m=m-1
        n=n-1

        while m>=0 and n>=0:
            if nums1[m]>nums2[n]:
                nums1[last]=nums1[m]
                m-=1
            else:
                nums1[last]=nums2[n]
                n-=1
            last-=1
        while n>=0:
            nums1[last]=nums2[n]
            n-=1
            last-=1



        """
        Do not return anything, modify nums1 in-place instead.
        """
